{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@kernel.org",
      "ID": "CVE-2024-36489"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\ntls: fix missing memory barrier in tls_init\n\nIn tls_init(), a write memory barrier is missing, and store-store\nreordering may cause NULL dereference in tls_{setsockopt,getsockopt}.\n\nCPU0                               CPU1\n-----                              -----\n// In tls_init()\n// In tls_ctx_create()\nctx = kzalloc()\nctx-\u003esk_proto = READ_ONCE(sk-\u003esk_prot) -(1)\n\n// In update_sk_prot()\nWRITE_ONCE(sk-\u003esk_prot, tls_prots)     -(2)\n\n                                   // In sock_common_setsockopt()\n                                   READ_ONCE(sk-\u003esk_prot)-\u003esetsockopt()\n\n                                   // In tls_{setsockopt,getsockopt}()\n                                   ctx-\u003esk_proto-\u003esetsockopt()    -(3)\n\nIn the above scenario, when (1) and (2) are reordered, (3) can observe\nthe NULL value of ctx-\u003esk_proto, causing NULL dereference.\n\nTo fix it, we rely on rcu_assign_pointer() which implies the release\nbarrier semantic. By moving rcu_assign_pointer() after ctx-\u003esk_proto is\ninitialized, we can ensure that ctx-\u003esk_proto are visible when\nchanging sk-\u003esk_prot."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://git.kernel.org/stable/c/d72e126e9a36d3d33889829df8fc90100bb0e071",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/d72e126e9a36d3d33889829df8fc90100bb0e071"
        },
        {
          "name": "https://git.kernel.org/stable/c/2c260a24cf1c4d30ea3646124f766ee46169280b",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/2c260a24cf1c4d30ea3646124f766ee46169280b"
        },
        {
          "name": "https://git.kernel.org/stable/c/335c8f1566d8e44c384d16b450a18554896d4e8b",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/335c8f1566d8e44c384d16b450a18554896d4e8b"
        },
        {
          "name": "https://git.kernel.org/stable/c/ab67c2fd3d070a21914d0c31319d3858ab4e199c",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/ab67c2fd3d070a21914d0c31319d3858ab4e199c"
        },
        {
          "name": "https://git.kernel.org/stable/c/ef21007a7b581c7fe64d5a10c320880a033c837b",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/ef21007a7b581c7fe64d5a10c320880a033c837b"
        },
        {
          "name": "https://git.kernel.org/stable/c/91e61dd7a0af660408e87372d8330ceb218be302",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/91e61dd7a0af660408e87372d8330ceb218be302"
        }
      ]
    }
  },
  "impact": {},
  "lastModifiedDate": "2024-06-21T11:22Z",
  "publishedDate": "2024-06-21T11:15Z"
}
{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [
      {
        "children": [],
        "cpe_match": [
          {
            "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
            "cpe_name": [],
            "versionEndIncluding": "6.12.14",
            "versionStartIncluding": "6.11",
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
            "cpe_name": [],
            "versionEndIncluding": "6.13.3",
            "versionStartIncluding": "6.13",
            "vulnerable": true
          }
        ],
        "operator": "OR"
      }
    ]
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@kernel.org",
      "ID": "CVE-2024-58084"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nfirmware: qcom: scm: Fix missing read barrier in qcom_scm_get_tzmem_pool()\n\nCommit 2e4955167ec5 (\"firmware: qcom: scm: Fix __scm and waitq\ncompletion variable initialization\") introduced a write barrier in probe\nfunction to store global '__scm' variable.  We all known barriers are\npaired (see memory-barriers.txt: \"Note that write barriers should\nnormally be paired with read or address-dependency barriers\"), therefore\naccessing it from concurrent contexts requires read barrier.  Previous\ncommit added such barrier in qcom_scm_is_available(), so let's use that\ndirectly.\n\nLack of this read barrier can result in fetching stale '__scm' variable\nvalue, NULL, and dereferencing it.\n\nNote that barrier in qcom_scm_is_available() satisfies here the control\ndependency."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "CWE-476"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://git.kernel.org/stable/c/b628510397b5cafa1f5d3e848a28affd1c635302",
          "refsource": "",
          "tags": [
            "Patch"
          ],
          "url": "https://git.kernel.org/stable/c/b628510397b5cafa1f5d3e848a28affd1c635302"
        },
        {
          "name": "https://git.kernel.org/stable/c/e03db7c1255ebabba5e1a447754faeb138de15a2",
          "refsource": "",
          "tags": [
            "Patch"
          ],
          "url": "https://git.kernel.org/stable/c/e03db7c1255ebabba5e1a447754faeb138de15a2"
        },
        {
          "name": "https://git.kernel.org/stable/c/fee921e3c641f64185abee83f9a6e65f0b380682",
          "refsource": "",
          "tags": [
            "Patch"
          ],
          "url": "https://git.kernel.org/stable/c/fee921e3c641f64185abee83f9a6e65f0b380682"
        }
      ]
    }
  },
  "impact": {
    "baseMetricV3": {
      "cvssV3": {
        "attackComplexity": "LOW",
        "attackVector": "LOCAL",
        "availabilityImpact": "HIGH",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "privilegesRequired": "LOW",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
        "version": "3.1"
      },
      "exploitabilityScore": 1.8,
      "impactScore": 3.6
    }
  },
  "lastModifiedDate": "2025-03-24T18:30Z",
  "publishedDate": "2025-03-06T17:15Z"
}
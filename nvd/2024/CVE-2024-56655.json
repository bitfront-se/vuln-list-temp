{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": [
      {
        "children": [],
        "cpe_match": [
          {
            "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.13:rc2:*:*:*:*:*:*",
            "cpe_name": [],
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:6.13:rc1:*:*:*:*:*:*",
            "cpe_name": [],
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
            "cpe_name": [],
            "versionEndExcluding": "6.6.67",
            "versionStartIncluding": "6.6.61",
            "vulnerable": true
          },
          {
            "cpe23Uri": "cpe:2.3:o:linux:linux_kernel:*:*:*:*:*:*:*:*",
            "cpe_name": [],
            "versionEndExcluding": "6.12.6",
            "versionStartIncluding": "6.11.8",
            "vulnerable": true
          }
        ],
        "operator": "OR"
      }
    ]
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@kernel.org",
      "ID": "CVE-2024-56655"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nnetfilter: nf_tables: do not defer rule destruction via call_rcu\n\nnf_tables_chain_destroy can sleep, it can't be used from call_rcu\ncallbacks.\n\nMoreover, nf_tables_rule_release() is only safe for error unwinding,\nwhile transaction mutex is held and the to-be-desroyed rule was not\nexposed to either dataplane or dumps, as it deactives+frees without\nthe required synchronize_rcu() in-between.\n\nnft_rule_expr_deactivate() callbacks will change -\u003euse counters\nof other chains/sets, see e.g. nft_lookup .deactivate callback, these\nmust be serialized via transaction mutex.\n\nAlso add a few lockdep asserts to make this more explicit.\n\nCalling synchronize_rcu() isn't ideal, but fixing this without is hard\nand way more intrusive.  As-is, we can get:\n\nWARNING: .. net/netfilter/nf_tables_api.c:5515 nft_set_destroy+0x..\nWorkqueue: events nf_tables_trans_destroy_work\nRIP: 0010:nft_set_destroy+0x3fe/0x5c0\nCall Trace:\n \u003cTASK\u003e\n nf_tables_trans_destroy_work+0x6b7/0xad0\n process_one_work+0x64a/0xce0\n worker_thread+0x613/0x10d0\n\nIn case the synchronize_rcu becomes an issue, we can explore alternatives.\n\nOne way would be to allocate nft_trans_rule objects + one nft_trans_chain\nobject, deactivate the rules + the chain and then defer the freeing to the\nnft destroy workqueue.  We'd still need to keep the synchronize_rcu path as\na fallback to handle -ENOMEM corner cases though."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": [
            {
              "lang": "en",
              "value": "NVD-CWE-noinfo"
            }
          ]
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://git.kernel.org/stable/c/27f0574253f6c24c8ee4e3f0a685b75ed3a256ed",
          "refsource": "",
          "tags": [
            "Patch"
          ],
          "url": "https://git.kernel.org/stable/c/27f0574253f6c24c8ee4e3f0a685b75ed3a256ed"
        },
        {
          "name": "https://git.kernel.org/stable/c/7cf0bd232b565d9852cb25fd094f77254773e048",
          "refsource": "",
          "tags": [
            "Patch"
          ],
          "url": "https://git.kernel.org/stable/c/7cf0bd232b565d9852cb25fd094f77254773e048"
        },
        {
          "name": "https://git.kernel.org/stable/c/b04df3da1b5c6f6dc7cdccc37941740c078c4043",
          "refsource": "",
          "tags": [
            "Patch"
          ],
          "url": "https://git.kernel.org/stable/c/b04df3da1b5c6f6dc7cdccc37941740c078c4043"
        },
        {
          "name": "https://git.kernel.org/stable/c/b0f013bebf94fe7ae75e5a53be2f2bd1cc1841e3",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/b0f013bebf94fe7ae75e5a53be2f2bd1cc1841e3"
        },
        {
          "name": "https://git.kernel.org/stable/c/b8d8f53e1858178882b881b8c09f94ef0e83bf76",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/b8d8f53e1858178882b881b8c09f94ef0e83bf76"
        }
      ]
    }
  },
  "impact": {
    "baseMetricV3": {
      "cvssV3": {
        "attackComplexity": "LOW",
        "attackVector": "LOCAL",
        "availabilityImpact": "HIGH",
        "baseScore": 5.5,
        "baseSeverity": "MEDIUM",
        "confidentialityImpact": "NONE",
        "integrityImpact": "NONE",
        "privilegesRequired": "LOW",
        "scope": "UNCHANGED",
        "userInteraction": "NONE",
        "vectorString": "CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:N/I:N/A:H",
        "version": "3.1"
      },
      "exploitabilityScore": 1.8,
      "impactScore": 3.6
    }
  },
  "lastModifiedDate": "2025-05-22T13:15Z",
  "publishedDate": "2024-12-27T15:15Z"
}
{
  "configurations": {
    "CVE_data_version": "4.0",
    "nodes": []
  },
  "cve": {
    "CVE_data_meta": {
      "ASSIGNER": "cve@kernel.org",
      "ID": "CVE-2025-21695"
    },
    "data_format": "MITRE",
    "data_type": "CVE",
    "data_version": "4.0",
    "description": {
      "description_data": [
        {
          "lang": "en",
          "value": "In the Linux kernel, the following vulnerability has been resolved:\n\nplatform/x86: dell-uart-backlight: fix serdev race\n\nThe dell_uart_bl_serdev_probe() function calls devm_serdev_device_open()\nbefore setting the client ops via serdev_device_set_client_ops(). This\nordering can trigger a NULL pointer dereference in the serdev controller's\nreceive_buf handler, as it assumes serdev-\u003eops is valid when\nSERPORT_ACTIVE is set.\n\nThis is similar to the issue fixed in commit 5e700b384ec1\n(\"platform/chrome: cros_ec_uart: properly fix race condition\") where\ndevm_serdev_device_open() was called before fully initializing the\ndevice.\n\nFix the race by ensuring client ops are set before enabling the port via\ndevm_serdev_device_open().\n\nNote, serdev_device_set_baudrate() and serdev_device_set_flow_control()\ncalls should be after the devm_serdev_device_open() call."
        }
      ]
    },
    "problemtype": {
      "problemtype_data": [
        {
          "description": []
        }
      ]
    },
    "references": {
      "reference_data": [
        {
          "name": "https://git.kernel.org/stable/c/1b2128aa2d45ab20b22548dcf4b48906298ca7fd",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/1b2128aa2d45ab20b22548dcf4b48906298ca7fd"
        },
        {
          "name": "https://git.kernel.org/stable/c/d3a24d923333f75aaece9acb051d676edc0afb75",
          "refsource": "",
          "tags": [],
          "url": "https://git.kernel.org/stable/c/d3a24d923333f75aaece9acb051d676edc0afb75"
        }
      ]
    }
  },
  "impact": {},
  "lastModifiedDate": "2025-02-12T14:15Z",
  "publishedDate": "2025-02-12T14:15Z"
}